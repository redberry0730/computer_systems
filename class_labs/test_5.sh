INPUT_F="0.0
-0.0
1.0
-1.0
-3.75
-11.875
-12345.2
0.00000000000000000000000000000000000001
q"

INPUT_D="0.0
-0.0
1.0
-1.0
-3.75
-11.875
-12345.2
0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001
q"

EXPECTED_F="Please enter a floating-point number or q to quit.
> 0.000000
All bits: 00000000000000000000000000000000
Sign: 0
Exponent: 00000000
Mantissa: 00000000000000000000000
Original value: 0.0
> -0.000000
All bits: 10000000000000000000000000000000
Sign: 1
Exponent: 00000000
Mantissa: 00000000000000000000000
Original value: -0.0
> 1.000000
All bits: 00111111100000000000000000000000
Sign: 0
Exponent: 01111111
Mantissa: 00000000000000000000000
Original value: (-1)^{0} x (1 + 0.000000) x 2^{127 - 127} = 1.000000000000000000000000000000000000000000000
> -1.000000
All bits: 10111111100000000000000000000000
Sign: 1
Exponent: 01111111
Mantissa: 00000000000000000000000
Original value: (-1)^{1} x (1 + 0.000000) x 2^{127 - 127} = -1.000000000000000000000000000000000000000000000
> -3.750000
All bits: 11000000011100000000000000000000
Sign: 1
Exponent: 10000000
Mantissa: 11100000000000000000000
Original value: (-1)^{1} x (1 + 0.875000) x 2^{128 - 127} = -3.750000000000000000000000000000000000000000000
> -11.875000
All bits: 11000001001111100000000000000000
Sign: 1
Exponent: 10000010
Mantissa: 01111100000000000000000
Original value: (-1)^{1} x (1 + 0.484375) x 2^{130 - 127} = -11.875000000000000000000000000000000000000000000
> -12345.200195
All bits: 11000110010000001110010011001101
Sign: 1
Exponent: 10001100
Mantissa: 10000001110010011001101
Original value: (-1)^{1} x (1 + 0.506982) x 2^{140 - 127} = -12345.200195312500000000000000000000000000000000000
> 0.000000
All bits: 00000000011011001110001111101110
Sign: 0
Exponent: 00000000
Mantissa: 11011001110001111101110
Original value: (-1)^{0} x 0.850705862045288085937500000000000000000000000 x 2^{1 - 127} = 0.000000000000000000000000000000000000009999999
> "

EXPECTED_D="Please enter a floating-point number or q to quit.
> 0.000000
All bits: 0000000000000000000000000000000000000000000000000000000000000000
Sign: 0
Exponent: 00000000000
Mantissa: 0000000000000000000000000000000000000000000000000000
Original value: 0.0
> -0.000000
All bits: 1000000000000000000000000000000000000000000000000000000000000000
Sign: 1
Exponent: 00000000000
Mantissa: 0000000000000000000000000000000000000000000000000000
Original value: -0.0
> 1.000000
All bits: 0011111111110000000000000000000000000000000000000000000000000000
Sign: 0
Exponent: 01111111111
Mantissa: 0000000000000000000000000000000000000000000000000000
Original value: (-1)^{0} x (1 + 0.000000) x 2^{1023 - 1023} = 1.000000000000000000000000000000000000000000000
> -1.000000
All bits: 1011111111110000000000000000000000000000000000000000000000000000
Sign: 1
Exponent: 01111111111
Mantissa: 0000000000000000000000000000000000000000000000000000
Original value: (-1)^{1} x (1 + 0.000000) x 2^{1023 - 1023} = -1.000000000000000000000000000000000000000000000
> -3.750000
All bits: 1100000000001110000000000000000000000000000000000000000000000000
Sign: 1
Exponent: 10000000000
Mantissa: 1110000000000000000000000000000000000000000000000000
Original value: (-1)^{1} x (1 + 0.875000) x 2^{1024 - 1023} = -3.750000000000000000000000000000000000000000000
> -11.875000
All bits: 1100000000100111110000000000000000000000000000000000000000000000
Sign: 1
Exponent: 10000000010
Mantissa: 0111110000000000000000000000000000000000000000000000
Original value: (-1)^{1} x (1 + 0.484375) x 2^{1026 - 1023} = -11.875000000000000000000000000000000000000000000
> -12345.200000
All bits: 1100000011001000000111001001100110011001100110011001100110011010
Sign: 1
Exponent: 10000001100
Mantissa: 1000000111001001100110011001100110011001100110011010
Original value: (-1)^{1} x (1 + 0.506982) x 2^{1036 - 1023} = -12345.200000000000727595761418342590332031250000000
> 0.000000
All bits: 0000000000000000000000000000000000000000000000110001011010100010
Sign: 0
Exponent: 00000000000
Mantissa: 0000000000000000000000000000000000110001011010100010
Original value: (-1)^{0} x 0.000000000044942272126036186818964779376983643 x 2^{1 - 1023} = 0.000000000000000000000000000000000000000000000
> "

echo "Compiling ..."
make clean && make

echo "Running ..."
echo "$INPUT_F" > XYZinput_f.txt
echo "$EXPECTED_F\n" > XYZexpected_f.txt
echo "$INPUT_D" > XYZinput_d.txt
echo "$EXPECTED_D\n" > XYZexpected_d.txt
./fp_analyzer < XYZinput_f.txt > XYZoutput_f.txt
./fp_analyzer_d < XYZinput_d.txt > XYZoutput_d.txt
echo "\n" >> XYZoutput_f.txt
echo "\n" >> XYZoutput_d.txt

echo "FLOAT -- Diffing ..."
DIFF=$(diff XYZexpected_f.txt XYZoutput_f.txt)
if [ "$DIFF" != "" ]
then
    echo "\nXXXXXXXX UNEXPEXTED OUTPUT: XXXXXXXX\n"
    echo "$DIFF\n"
else
    echo "\n======== CORRECT ========\n"
fi

echo "DOUBLE -- Diffing ..."
DIFF=$(diff XYZexpected_d.txt XYZoutput_d.txt)
if [ "$DIFF" != "" ]
then
    echo "\nXXXXXXXX UNEXPEXTED OUTPUT: XXXXXXXX\n"
    echo "$DIFF\n"
else
    echo "\n======== CORRECT ========\n"
fi

rm -f XYZ*.txt
